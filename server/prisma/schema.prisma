
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}



model User {
  id Int @id @default(autoincrement())
  firstName String
  lastName String
  email String @unique
  phoneNumber String?
  password String
  sex String?
  role String
  studentId String?
  yearLevel Int?
  block String?
  programId Int?
  status String?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  program Program? @relation(fields: [programId], references: [id])
  bsaStudentRecord BsaStudentRecord[]
  bsbaStudentRecord BsbaStudentRecord[]
  bsmaStudentRecord BsmaStudentRecord[]
  class Class[]
}

model Program {
  id Int @id @default(autoincrement())
  programCode String
  programName String
  users User[]
}


model BsaCurriculum {
  id Int @id @default(autoincrement())
  courseCode String
  courseTitle String
  units Int @default(3)
  bsaStudentRecord BsaStudentRecord[]
}
model BsbaCurriculum {
  id Int @id @default(autoincrement())
  courseCode String
  courseTitle String
  units Int @default(3)
  bsbaStudentRecord BsbaStudentRecord[]
}
model BsmaCurriculum {
  id Int @id @default(autoincrement())
  courseCode String
  courseTitle String
  units Int @default(3)
  bsmaStudentRecord BsmaStudentRecord[]
}



model BsaStudentRecord {
  id Int @id @default(autoincrement())
  userId Int
  courseId Int
  grade Decimal? @db.Decimal(3, 1)
  user User @relation(fields: [userId], references: [id],  onDelete: Cascade)
  bsaCurriculum BsaCurriculum @relation(fields: [courseId], references: [id])
}
model BsbaStudentRecord {
  id Int @id @default(autoincrement())
  userId Int
  courseId Int
  grade Decimal? @db.Decimal(3, 1)
  user User @relation(fields: [userId], references: [id],  onDelete: Cascade)
  bsbaCurriculum BsbaCurriculum @relation(fields: [courseId], references: [id])
}
model BsmaStudentRecord {
  id Int @id @default(autoincrement())
  userId Int
  courseId Int
  grade Decimal? @db.Decimal(3, 1)
  user User @relation(fields: [userId], references: [id],  onDelete: Cascade)
  bsmaCurriculum BsmaCurriculum @relation(fields: [courseId], references: [id])
}


model Class {
  id Int @id @default(autoincrement())
  userId Int
  courseCode String
  day String
  time String
  room String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model LoginActivity {
  id Int @id @default(autoincrement())
  studentId String
  firstName String
  lastName String
  email String
  role String
  status String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model RefreshToken {
  id Int @id @default(autoincrement())
  token String @unique @db.VarChar(2048)
}